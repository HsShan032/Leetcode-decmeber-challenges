/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> res;
    void dfs(TreeNode *root,vector<int> path){
        if(!root) return;
        path.push_back(root->val);
        if(root->left == NULL && root->right == NULL)
        {
            res.push_back(path);
            return;
        }
        dfs(root->left,path);
        dfs(root->right,path);
    }
    bool check(vector<int> path){
        int freq[10] = {0};
        for(auto i:path)
            freq[i]++;
        int x = 0;
        for(auto i:freq)
            if(i%2 == 1)
                x++;
        return x<=1; 
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        int count = 0;
        vector<int> path;
        dfs(root,path);
        for(auto i:res){
            if(check(i))
                count++;
        }
        return count;
    }
};
